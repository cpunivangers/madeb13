#!/bin/bash

# 06/2021
# Christian.pottier@univ-angers.fr
#
# Utilisation secret-tool pour stoker le secret du Crédentials pour le montage avec systemd sur les points de montages (user-mount)

function usage(){
	printf "Utilisation du script :\n"
	printf "\t-c                       : secret pour credential au login\n"
	printf "\t-f                       : force le secret\n"
	printf "\t-h                       : affiche ce message\n"
}

OPT_FORCE=false
OPT_CRED=false

while getopts "cfh" option
do
	case $option in
		h) usage;
			exit 0;;
		f) 	OPT_FORCE=true ;;
		c)	OPT_CRED=true ;;
	esac
done

echo OPT_FORCE = $OPT_FORCE
echo OPT_CRED = $OPT_CRED
		
# Pour éviter l'injection de code :
CONFIG_SYNTAX="^\s*#|^\s*$|^[a-zA-Z_]+='[^']*'$"

# Référence partage
REF_SHARE=$(grep -l "^DOMAIN_SERVER=" /etc/skel/.config/user-mount/* | head -1)

PATH_SHARE=$(egrep "${CONFIG_SYNTAX}" "$REF_SHARE" | grep "^PATH_SHARE=" | cut -d\' -f2)
if [ -z "$PATH_SHARE" ]; then
	exit
fi

# Serveur
NAME_SERVER=$(echo $PATH_SHARE | cut -d/ -f3)
if [ -z "$NAME_SERVER" ]; then
	exit
fi
DOMAIN_SERVER=$(egrep "${CONFIG_SYNTAX}" "$REF_SHARE" | grep "^DOMAIN_SERVER=" | cut -d\' -f2)

# Credential
PATH_CRED="/tmp/.cred_${USER}_${NAME_SERVER}"
if [ -f $PATH_CRED ]; then
	# Suppression du credential
	rm -f $PATH_CRED
fi

# Test connection serveur
ping -q -c 1 $NAME_SERVER &> /dev/null
if [ ! $? -eq 0 ] ; then
	echo "serveur inaccessible !"
	exit
fi

echo $REF_SHARE
echo $PATH_SHARE
echo $DOMAIN_SERVER


# Fonctions
credentialuser() {
	# Ecriture credentials
	echo username=$USER_SERVER > $PATH_CRED # Nom de l'utilisateur
	echo password=$PASS_SERVER >> $PATH_CRED # Mot de passe
	echo domain=$DOMAIN_SERVER >> $PATH_CRED # Domaine
	chmod 400 $PATH_CRED
	
	# control
	controlshare
	
	if [ ! -e /home/$USER/.config/user-mount ] ; then
		initconfiguser
	fi

}

initconfiguser() {
	# Initialisation des configs pour prendre en compte les variables USER, ...
	cp -r /etc/skel/.config/user-mount /home/$USER/.config/
	for ishare in /home/$USER/.config/user-mount/*
	do
		echo "mise à jour $ishare ..."
		sed "/^#/d; s/'/\"/g" $ishare | envsubst | sed "s/\"/'/g" > /tmp/config_share
		cp -f /tmp/config_share $ishare
	done
	# Création des unit systemd
	sudo user-mount
}

controlshare() {
	COMMAND="smbclient -A $PATH_CRED $PATH_SHARE -c 'dir' 2>/dev/null"
	if [[ $(eval $COMMAND) == *"NT_STATUS_ACCESS_DENIED"* ]]; then
		# on supprime le secret
		secret-tool clear server $NAME_SERVER user $USER_SERVER		
		# on supprime le credential
		rm -f $PATH_CRED
		notify-send "$PATH_SHARE inaccessible !!!"
		exit 1
	fi
}

# Identifiant
export USER_SERVER=$(echo $(secret-tool search server $NAME_SERVER) | cut -d" " -f4 | cut -d@ -f1)

if [ "$USER" = "$USER_SERVER" ] && [ "$OPT_FORCE" = "false" ]; then
	# Utilisateur enregistré, on crée le crédential
	PASS_SERVER=$(secret-tool lookup server $NAME_SERVER user $USER_SERVER)
	credentialuser
	exit 0
fi

if [ "$OPT_CRED" = "true" ]; then
	exit 0
fi

echo "on supprime les secrets ..."
if [ ! -z "$USER_SERVER" ]; then
	secret-tool clear server $NAME_SERVER user $USER_SERVER
fi
# on force la réinitialisation
rm -rf /home/$USER/.config/user-mount

# Formulaire
INIT_USER="$USER"
INIT_PWD=""
INIT_MEMO=""

FILE_LOGO=/usr/share/icons/$DOMAIN_SERVER.png

loginMdpUA=`yad --form \
	--title="$DOMAIN_SERVER " \
	--window-icon=$FILE_LOGO \
	--field="Saisir votre Identifiant ENT" "$INIT_USER" \
	--field="Saisir votre mot de passe ENT":H "$INIT_PWD" \
	--field="Se souvenir":CHK "$INIT_MEMO"`
	
# Si non validé (echap, annule)
if [ $? -ne 0 ]; then
    #On quitte le script
    exit
fi

USER_SERVER=$(echo "$loginMdpUA" | cut -d "|" -f1)
PASS_SERVER=$(echo "$loginMdpUA" | cut -d "|" -f2)
MEMO=$(echo "$loginMdpUA" | cut -d "|" -f3)

if [ -f  $HOME/.config/autostart/zsecret-user-mount.desktop ]; then
	# Supp credential à l'ouverture de session
	rm $HOME/.config/autostart/zsecret-user-mount.desktop
fi

# Stock dans le trousseau pour les utilisateur non anonyme
if [ "$USER" = "$USER_SERVER" ] ; then
	if [ "$MEMO" = "TRUE" ] ; then
		printf $PASS_SERVER | secret-tool store --label "${USER_SERVER}@${NAME_SERVER}" "user" "${USER_SERVER}" "domain" "${DOMAIN_SERVER}" "server" "${NAME_SERVER}"
		# Ajout credential à l'ouverture de session
		mkdir -p $HOME/.config/autostart
		echo -e "[Desktop Entry]\nType=Application\nExec=secret-user-mount -c\nHidden=false\nX-GNOME-Autostart-enabled=true\nName=zsecret-user-mount\nComment=Credential secret-user-mount" | tee $HOME/.config/autostart/zsecret-user-mount.desktop
	fi
fi

credentialuser

exit
